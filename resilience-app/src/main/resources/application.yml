server:
  port: 8080

spring:
  main:
    banner-mode: off
  application:
    name: resilience-app
  cloud:
    stream:
      function:
        definition: onErrorTestRequestSequential;onErrorTestRequestConcurrent
      bindings:
        # Sequential consumer binding
        onErrorTestRequestSequential-in-0:
          destination: resilience-lab-sequential-topic
          group: resilience-lab-sequential
          consumer:
            concurrency: 1
            use-native-decoding: true
        # Concurrent consumer binding
        onErrorTestRequestConcurrent-in-0:
          destination: resilience-lab-concurrent-topic
          group: resilience-lab-concurrent
          consumer:
            concurrency: 3
            use-native-decoding: true
        # Producer bindings
        resilience-lab-sequential-out-0:
          destination: resilience-lab-sequential-topic
        resilience-lab-concurrent-out-0:
          destination: resilience-lab-concurrent-topic
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
          auto-add-partitions: true
          min-partition-count: 3
          replication-factor: 1
        default:
          consumer:
            auto-offset-reset: earliest
            enable-auto-commit: true
            auto-commit-interval: 1000
            session-timeout: 30000
            heartbeat-interval: 3000
          producer:
            batch-size: 16384
            linger: 10
            compression-type: snappy
            acks: 1
            retries: 3
        bindings:
          # Sequential consumer configuration
          onErrorTestRequestSequentialSimple-in-0:
            consumer:
              enable-dlq: false
              auto-commit-offset: true
              start-offset: earliest
          # Concurrent consumer configuration
          onErrorTestRequestConcurrentSimple-in-0:
            consumer:
              enable-dlq: false
              auto-commit-offset: true
              start-offset: earliest


kafka-custom-config:
  topics:
    sequential-consumer:
      name: resilience-lab-sequential-topic
    concurrent-consumer:
      name: resilience-lab-concurrent-topic
  credentials:
    user: resilience_app_user
    password: resilience_app_password
    mechanism: PLAIN

# Resilience4j Configuration
resilience4j:
  retry:
    configs:
      default:
        max-attempts: 1
    instances:
      # Used by @Retry annotation approach in TroubleMakerAdapter
      annotationRetryConfig:
        max-attempts: 5
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.net.SocketException
          - java.net.UnknownHostException
          - java.io.IOException
          - feign.RetryableException
          - feign.FeignException
          - feign.FeignException.ServiceUnavailable
          - feign.FeignException.InternalServerError
          - feign.FeignException.BadGateway
          - feign.FeignException.GatewayTimeout

# Application URLs and Configuration
app:
  troubleMaker:
    url: http://localhost:8081
  # Programmatic Retry Configuration
  programmaticRetryConfig:
    max-attempts: 5
    # Strategy options: standard-exponential, random-backoff, custom-interval
    strategy: "random-backoff"
    initial-interval: 200  # in milliseconds
    exponential-backoff-multiplier: 1.5
    randomization-factor: 0.5
    maxInterval: 10000  # in milliseconds (10 seconds)

    retry-exceptions:
      - java.net.ConnectException
      - java.net.SocketTimeoutException
      - java.net.SocketException
      - java.net.UnknownHostException
      - java.io.IOException
      - feign.RetryableException
      - feign.FeignException
      - feign.FeignException.ServiceUnavailable
      - feign.FeignException.InternalServerError
      - feign.FeignException.BadGateway
      - feign.FeignException.GatewayTimeout

# Logging configuration
logging:
  level:
    com.example.resilience_app: DEBUG
    org.apache.kafka: INFO
    io.github.resilience4j: DEBUG