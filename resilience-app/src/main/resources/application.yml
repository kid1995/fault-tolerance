server:
  port: 8080

spring:
  main:
    banner-mode: off
  application:
    name: resilience-app
  cloud:
    function:
      definition: "onErrorTestRequestSequential; onErrorTestRequestConcurrent"
    stream:
      bindings:
        # Sequential consumer binding
        onErrorTestRequestSequential-in-0:
          destination: resilience-lab-sequential-topic
          group: resilience-lab-sequential
          consumer:
            concurrency: 1
        # Concurrent consumer binding
        onErrorTestRequestConcurrent-in-0:
          destination: resilience-lab-concurrent-topic
          group: resilience-lab-concurrent
          consumer:
            concurrency: 3
        # Producer bindings
        resilience-lab-sequential-out-0:
          destination: resilience-lab-sequential-topic
        resilience-lab-concurrent-out-0:
          destination: resilience-lab-concurrent-topic
      kafka:
        binder:
          brokers: localhost:9092
          enableObservation: true
          configuration:
            sasl:
              jaas:
                enabled: false
                config: org.apache.kafka.common.security.plain.PlainLoginModule required username="resilience_app_user" password="resilience_app_password";
              mechanism: PLAIN
            security:
              user: resilience_app_user
              password: resilience_app_password
              protocol: PLAINTEXT
              saslMechanism: PLAIN
          consumerProperties:
            auto-offset-reset: latest

# Resilience4j Configuration
resilience4j:
  retry:
    configs:
      default:
        max-attempts: 1
    instances:
      # Used by @Retry annotation approach in TroubleMakerAdapter
      annotationRetryConfig:
        max-attempts: 5
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.net.SocketException
          - java.net.UnknownHostException
          - java.io.IOException
          - feign.RetryableException
          - feign.FeignException
          - feign.FeignException.ServiceUnavailable
          - feign.FeignException.InternalServerError
          - feign.FeignException.BadGateway
          - feign.FeignException.GatewayTimeout

# Application URLs and Configuration
app:
  troubleMaker:
    url: http://localhost:8081
  # Programmatic Retry Configuration
  programmaticRetryConfig:
    max-attempts: 5
    # Strategy options: standard-exponential, random-backoff, custom-interval
    strategy: "random-backoff"
    initial-interval: 200  # in milliseconds
    exponential-backoff-multiplier: 1.5
    randomization-factor: 0.5
    maxInterval: 10000  # in milliseconds (10 seconds)