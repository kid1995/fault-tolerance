server:
  port: 8080

spring:
  main:
    banner-mode: off
  application:
    name: resilience-app
  stream:
    function:
      definition: onErrorTestRequest
    default:
      group: 'resilience-lab'
      consumer:
        max-attempts: 1
    bindings:
      resilience-lab-in-0:
        destination: resilience-lab-topic
      resilience-lab-out-0:
        destination: resilience-lab-topic
    kafka:
      binder:
        brokers: ${KAFKA_BROKERS:localhost:9092}
        enableObservation: true
        configuration:
          sasl:
            jaas:
              enabled: ${KAFKA_JAAS_ENABLED:false}
              config: org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASSWORD}";
            mechanism: ${KAFKA_SASL_MECHANISM:PLAIN}
          security:
            user: ${KAFKA_USER}
            password: ${KAFKA_PASSWORD}
            protocol: ${KAFKA_PROTOCOL:PLAINTEXT}
        consumerProperties:
          auto-offset-reset: latest
# Resilience4j Configuration
resilience4j:
  retry:
    configs:
      default:
        max-attempts: 1
    instances:
      # Used by @Retry annotation approach in TroubleMakerAdapter
      annotationRetryConfig:
        max-attempts: 5
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.net.SocketException
          - java.net.UnknownHostException
          - java.io.IOException
          - feign.RetryableException
          - feign.FeignException
          - feign.FeignException.ServiceUnavailable
          - feign.FeignException.InternalServerError
          - feign.FeignException.BadGateway
          - feign.FeignException.GatewayTimeout

# Application URLs and Configuration
app:
  troubleMaker:
    url: http://localhost:8081

  # Programmatic Retry Configuration
  programmaticRetryConfig:
    max-attempts: 5
    # Strategy options: standard-exponential, random-backoff, custom-interval
    strategy: "random-backoff"
    initial-interval: 200  # in milliseconds
    exponential-backoff-multiplier: 1.5
    randomization-factor: 0.5
    maxInterval: 10000  # in milliseconds (10 seconds)

    # Alternative configurations:
    # For standard-exponential strategy:
    # strategy: "standard-exponential"
    # initial-interval: 500
    # exponential-backoff-multiplier: 2.0

    # For custom-interval strategy:
    # strategy: "custom-interval"

    retry-exceptions:
      - java.net.ConnectException
      - java.net.SocketTimeoutException
      - java.net.SocketException
      - java.net.UnknownHostException
      - java.io.IOException
      - feign.RetryableException
      - feign.FeignException
      - feign.FeignException.ServiceUnavailable
      - feign.FeignException.InternalServerError
      - feign.FeignException.BadGateway
      - feign.FeignException.GatewayTimeout