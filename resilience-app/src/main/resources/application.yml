server:
  port: 8080

spring:
  main:
    banner-mode: off
  application:
    name: resilience-app
  stream:
    function:
      definition: onErrorTestRequestSequential;onErrorTestRequestConcurrent
    default:
      group: 'resilience-lab'
      consumer:
        max-attempts: 1
    bindings:
      # Sequential consumer binding
      onErrorTestRequestSequential-in-0:
        destination: ${kafka-custom-config.topics.sequential-consumer.name}
        consumer:
          concurrency: 1  # Single thread for sequential processing
      # Concurrent consumer binding
      onErrorTestRequestConcurrent-in-0:
        destination: ${kafka-custom-config.topics.concurrent-consumer.name}
        consumer:
          concurrency: 3  # Multiple threads for concurrent processing
      # Producer bindings
      resilience-lab-sequential-out-0:
        destination: ${kafka-custom-config.topics.sequential-consumer.name}
      resilience-lab-concurrent-out-0:
        destination: ${kafka-custom-config.topics.concurrent-consumer.name}
    kafka:
      binder:
        brokers: localhost:9092
        enableObservation: true
        # Producer batch configuration
        producer-properties:
          batch.size: 16384  # Batch size in bytes
          linger.ms: 10      # Wait time to accumulate messages
          buffer.memory: 33554432
          compression.type: snappy
          acks: 1
          retries: 3
        # Consumer configuration
        consumer-properties:
          max.poll.records: 500        # Max records per poll
          fetch.min.bytes: 1024        # Minimum bytes to fetch
          fetch.max.wait.ms: 300       # Max wait time for fetch
          auto-offset-reset: latest
          enable-auto-commit: true
          auto-commit-interval-ms: 1000
        configuration:
          security:
            user: ${kakfa-properties.credentials.user}
            password: ${kakfa-properties.credentials.password}
            protocol: ${kakfa-properties.credentials.mechanism}

kafka-custom-config:
  topics:
    sequential-consumer:
      name: resilience-lab-sequential-topic
    concurrent-consumer:
      name: resilience-lab-concurrent-topic
  credentials:
    user: resilience_app_user
    password: resilience_app_password
    mechanism: PLAIN

# Resilience4j Configuration
resilience4j:
  retry:
    configs:
      default:
        max-attempts: 1
    instances:
      # Used by @Retry annotation approach in TroubleMakerAdapter
      annotationRetryConfig:
        max-attempts: 5
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - java.net.SocketException
          - java.net.UnknownHostException
          - java.io.IOException
          - feign.RetryableException
          - feign.FeignException
          - feign.FeignException.ServiceUnavailable
          - feign.FeignException.InternalServerError
          - feign.FeignException.BadGateway
          - feign.FeignException.GatewayTimeout

# Application URLs and Configuration
app:
  troubleMaker:
    url: http://localhost:8081
  # Programmatic Retry Configuration
  programmaticRetryConfig:
    max-attempts: 5
    # Strategy options: standard-exponential, random-backoff, custom-interval
    strategy: "random-backoff"
    initial-interval: 200  # in milliseconds
    exponential-backoff-multiplier: 1.5
    randomization-factor: 0.5
    maxInterval: 10000  # in milliseconds (10 seconds)

    retry-exceptions:
      - java.net.ConnectException
      - java.net.SocketTimeoutException
      - java.net.SocketException
      - java.net.UnknownHostException
      - java.io.IOException
      - feign.RetryableException
      - feign.FeignException
      - feign.FeignException.ServiceUnavailable
      - feign.FeignException.InternalServerError
      - feign.FeignException.BadGateway
      - feign.FeignException.GatewayTimeout

# Logging configuration
logging:
  level:
    com.example.resilience_app: DEBUG
    org.apache.kafka: INFO
    io.github.resilience4j: DEBUG